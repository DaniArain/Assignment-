Assignment 05 (Loops) — Complete Solutions
This notebook contains clear, well‑commented Python solutions to all 15 problems from your assignment. Each task has its own section with runnable code.

Tip: Run cells one by one. For tasks that prompt for input, enter the requested value(s) in the input box that appears.

1) Print numbers 1 to 10 (for loop)

# Prints numbers from 1 to 10 using a for loop
for i in range(1, 11):
    print(i)
     
2) Print numbers 20 down to 1 (while loop)

# Prints numbers from 20 down to 1 using a while loop
i = 20
while i >= 1:
    print(i)
    i -= 1
     
3) Print even numbers from 1 to 10

# Prints even numbers from 1 to 10
for i in range(2, 11, 2):
    print(i)
     
4) Print numbers from 1 to n (user input)

# Prompts the user to enter a number n and prints numbers from 1 to n
try:
    n = int(input("Enter a number n: "))
    if n >= 1:
        for i in range(1, n + 1):
            print(i)
    else:
        print("Please enter an integer >= 1.")
except ValueError:
    print("Invalid input. Please enter an integer.")
     
5) Print odd numbers between 1 and n (user input)

# Prompts the user to enter a number n and prints odd numbers between 1 and n (inclusive)
try:
    n = int(input("Enter a number n: "))
    if n >= 1:
        # Start from 1, step by 2
        for i in range(1, n + 1, 2):
            print(i)
    else:
        print("Please enter an integer >= 1.")
except ValueError:
    print("Invalid input. Please enter an integer.")
     
6) Print 'Happy Birthday!' five times

# Prints 'Happy Birthday!' five times
for _ in range(5):
    print("Happy Birthday!")
     
7) First n terms of the series of squares (1², 2², 3², ...)

# Takes n and prints the first n square numbers
try:
    n = int(input("Enter a number: "))
    if n >= 1:
        squares = []
        for i in range(1, n + 1):
            squares.append(i * i)
        print(f"The first {n} terms of the series are:")
        print(*squares)
    else:
        print("Please enter an integer >= 1.")
except ValueError:
    print("Invalid input. Please enter an integer.")
     
8) Multiplication table (user input)

# Prompts the user to input a number and prints its multiplication table (1 to 10)
try:
    num = float(input("Enter a number for its multiplication table: "))
    upto = 10
    for i in range(1, upto + 1):
        print(f"{num} x {i} = {num * i}")
except ValueError:
    print("Invalid input. Please enter a valid number.")
     
9) First 8 terms of an arithmetic progression (start=3, difference=4)

# Prints the first 8 terms of an AP with first term a=3 and common difference d=4
a, d, n_terms = 3, 4, 8
ap_terms = []
term = a
for _ in range(n_terms):
    ap_terms.append(term)
    term += d
print(*ap_terms)
     
10) First 6 terms of a geometric sequence (start=2, ratio=3)

# Prints the first 6 terms of a GP with first term a=2 and common ratio r=3
a, r, n_terms = 2, 3, 6
gp_terms = []
term = a
for _ in range(n_terms):
    gp_terms.append(term)
    term *= r
print(*gp_terms)
     
11) Sum of integers from 1 to n (user input)

# Asks the user for a positive integer and calculates the sum from 1 to n
try:
    n = int(input("Enter a positive integer: "))
    if n >= 1:
        total = 0
        for i in range(1, n + 1):
            total += i
        print(f"The sum from 1 to {n} is: {total}")
    else:
        print("Please enter an integer >= 1.")
except ValueError:
    print("Invalid input. Please enter an integer.")
     
12) Sum of reciprocals from 1 to N (user input)

# Takes a positive integer N and calculates the sum of reciprocals 1 + 1/2 + ... + 1/N
try:
    N = int(input("Enter a positive integer: "))
    if N >= 1:
        s = 0.0
        for i in range(1, N + 1):
            s += 1.0 / i
        print(f"The sum of reciprocals from 1 to {N} is: {s:.2f}")
    else:
        print("Please enter an integer >= 1.")
except ValueError:
    print("Invalid input. Please enter an integer.")
     
13) Running total of 5 user-entered numbers

# Prompts the user to enter a number 5 times and prints the final running total
total = 0.0
count = 5
for i in range(1, count + 1):
    while True:
        try:
            x = float(input(f"Enter a number ({i}/{count}): "))
            total += x
            break
        except ValueError:
            print("Invalid input. Please enter a number.")
print(f"The final running total is: {total}")
     
14) Factorial of a positive integer (user input)

# Calculates the factorial of a given non-negative integer
try:
    n = int(input("Enter a non-negative integer: "))
    if n < 0:
        print("Factorial does not exist for negative numbers.")
    elif n == 0:
        print("The factorial of 0 is 1.")
    else:
        fact = 1
        for i in range(1, n + 1):
            fact *= i
        print(f"The factorial of {n} is {fact}.")
except ValueError:
    print("Invalid input. Please enter an integer.")
     
15) Power without using ** or math.pow() (handles negative exponents)

# Prompts for a base and an integer exponent; computes base^exponent without using ** or math.pow()
try:
    base = float(input("Enter the base: "))
    exp = int(input("Enter the exponent (integer, can be negative): "))
    
    # Edge case: 0 to a negative exponent is undefined (division by zero)
    if base == 0 and exp < 0:
        print("Undefined: 0 cannot be raised to a negative exponent.")
    else:
        # Compute absolute exponent by repeated multiplication
        abs_exp = -exp if exp < 0 else exp
        result = 1.0
        for _ in range(abs_exp):
            result *= base
        
        # If exponent is negative, take reciprocal
        if exp < 0:
            result = 1.0 / result
        
        print(f"{base} to the power {exp} is: {result}")
except ValueError:
    print("Invalid input. Please enter numeric base and integer exponent.")
     
